<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Copy_1_of_Create_Import_Order_Records</name>
        <label>Copy 1 of Create Import Order Records</label>
        <locationX>50</locationX>
        <locationY>1118</locationY>
        <actionName>Order_CreateScrapOrders</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>ScrapOrderCreatedOutput</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>amountToScrap</name>
            <value>
                <elementReference>GetProductDetails.Stocknumber__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orderRef</name>
            <value>
                <stringValue>Scrap Full</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>product</name>
            <value>
                <elementReference>GetProductDetails</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Order_CreateScrapOrders</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>CreateImportOrderRecords</name>
        <label>Create Import Order Records</label>
        <locationX>314</locationX>
        <locationY>1238</locationY>
        <actionName>Order_CreateScrapOrders</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>ScrapOrderCreatedOutput</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>amountToScrap</name>
            <value>
                <elementReference>AmountToBeScrapped</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orderRef</name>
        </inputParameters>
        <inputParameters>
            <name>product</name>
            <value>
                <elementReference>GetProductDetails</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Order_CreateScrapOrders</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>54.0</apiVersion>
    <assignments>
        <description>{!Get_Operating_Company_Pricebook.Pricebook__c}</description>
        <name>Assign_Operating_Company_Pricebook_Name</name>
        <label>Assign Operating Company Pricebook Name</label>
        <locationX>534</locationX>
        <locationY>398</locationY>
        <assignmentItems>
            <assignToReference>OperatingCompanyPriceBook</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Operating_Company_Pricebook.Pricebook__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Pricebook</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>ScrapComplete</name>
        <choiceText>Scrap Complete</choiceText>
        <dataType>Boolean</dataType>
    </choices>
    <choices>
        <name>ScrapPartially</name>
        <choiceText>Scrap Partially</choiceText>
        <dataType>Boolean</dataType>
    </choices>
    <decisions>
        <name>How_is_the_product_being_scrapped</name>
        <label>How is the product being scrapped?</label>
        <locationX>314</locationX>
        <locationY>998</locationY>
        <defaultConnector>
            <targetReference>ScrapOrderCreatedOutput</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Complete</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ScrapComplete</leftValueReference>
                <operator>WasSelected</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Create_Import_Order_Records</targetReference>
            </connector>
            <label>Complete</label>
        </rules>
        <rules>
            <name>Partially</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ScrapPartially</leftValueReference>
                <operator>WasSelected</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScrapOrder</targetReference>
            </connector>
            <label>Partially</label>
        </rules>
    </decisions>
    <decisions>
        <name>Pricebook_Entry_Found</name>
        <label>Pricebook Entry Found?</label>
        <locationX>534</locationX>
        <locationY>758</locationY>
        <defaultConnector>
            <targetReference>No_Pricebook_Entry_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Found</defaultConnectorLabel>
        <rules>
            <name>Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Pricebook_Entry</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Scrap_OrderScr</targetReference>
            </connector>
            <label>Found</label>
        </rules>
    </decisions>
    <description>21/02/2023 DB: Added validation to check if pricebook entry exists for product</description>
    <environments>Default</environments>
    <formulas>
        <name>OutputFormulaTest</name>
        <dataType>String</dataType>
        <expression>TEXT({!AmountToBeScrapped}) &amp; &quot; - &quot; &amp; {!recordId}</expression>
    </formulas>
    <interviewLabel>Scrap Order {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Scrap Order</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Operating_Company_Pricebook</name>
        <label>Get Operating Company Pricebook</label>
        <locationX>534</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Operating_Company_Pricebook_Name</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>OperatingCompany__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetProductDetails.Subsidiary__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>OperatingCompany__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetProductDetails.OperatingCompany__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>OrderRequestPricebook__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Pricebook</name>
        <label>Get Pricebook</label>
        <locationX>534</locationX>
        <locationY>518</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Pricebook_Entry</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>OperatingCompanyPriceBook</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Pricebook2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Pricebook_Entry</name>
        <label>Get Pricebook Entry</label>
        <locationX>534</locationX>
        <locationY>638</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Pricebook_Entry_Found</targetReference>
        </connector>
        <filterLogic>(1 OR 2) AND 3</filterLogic>
        <filters>
            <field>ISBN__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetProductDetails.ISBN__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>ProductEAN__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetProductDetails.EAN__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Pricebook2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Pricebook.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PricebookEntry</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetProductDetails</name>
        <label>Get Product Details</label>
        <locationX>534</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Operating_Company_Pricebook</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>No_Pricebook_Entry_Screen</name>
        <label>No Pricebook Entry Screen</label>
        <locationX>754</locationX>
        <locationY>878</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>NoPricebookEntryText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 16px; color: rgb(255, 0, 0);&quot;&gt;No valid price found for product &lt;/span&gt;&lt;strong style=&quot;font-size: 16px; color: rgb(255, 0, 0);&quot;&gt;{!GetProductDetails.Name}&lt;/strong&gt;&lt;span style=&quot;font-size: 16px; color: rgb(255, 0, 0);&quot;&gt; in pricebook &lt;/span&gt;&lt;strong style=&quot;font-size: 16px; color: rgb(255, 0, 0);&quot;&gt;{!OperatingCompanyPriceBook}&lt;/strong&gt;&lt;span style=&quot;font-size: 16px; color: rgb(255, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 16px; color: rgb(255, 0, 0);&quot;&gt;Please contact your item manager to add a price to the item in NetSuite before creating the scrap order.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Scrap_OrderScr</name>
        <label>Scrap Order</label>
        <locationX>314</locationX>
        <locationY>878</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>How_is_the_product_being_scrapped</targetReference>
        </connector>
        <fields>
            <name>scrapCompleteOrPartial</name>
            <choiceReferences>ScrapComplete</choiceReferences>
            <choiceReferences>ScrapPartially</choiceReferences>
            <dataType>Boolean</dataType>
            <fieldText>How would you like to scrap this product?</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ScrapOrder</name>
        <label>Scrap Order</label>
        <locationX>314</locationX>
        <locationY>1118</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>CreateImportOrderRecords</targetReference>
        </connector>
        <fields>
            <name>ProductName</name>
            <fieldText>&lt;p&gt;&lt;b&gt;{!GetProductDetails.Name}&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>AmountToBeScrapped</name>
            <dataType>Number</dataType>
            <fieldText>Amount To Be Scrapped</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>0</scale>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ScrapOrderCreatedOutput</name>
        <label>Scrap Order Created Output</label>
        <locationX>314</locationX>
        <locationY>1454</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ScrapOrderCreatedText</name>
            <fieldText>&lt;p&gt;Scrap Order has been created.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>408</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetProductDetails</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>OperatingCompanyPriceBook</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
