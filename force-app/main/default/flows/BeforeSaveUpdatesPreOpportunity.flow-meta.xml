<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>53.0</apiVersion>
    <assignments>
        <name>AssignAccount</name>
        <label>Assign Account</label>
        <locationX>380</locationX>
        <locationY>1223</locationY>
        <assignmentItems>
            <assignToReference>$Record.Account__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forAccountId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Company__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forCompany</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetContactByTeacherNumber</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignContact</name>
        <label>Assign Contact</label>
        <locationX>380</locationX>
        <locationY>2135</locationY>
        <assignmentItems>
            <assignToReference>$Record.Contact__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forContactId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.FirstName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forFirstName</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.MiddleName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forMiddleName</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.LastName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forLastName</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LookupAccountViaContact</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignContactAccount</name>
        <label>Assign Contact Account</label>
        <locationX>248</locationX>
        <locationY>2495</locationY>
        <assignmentItems>
            <assignToReference>$Record.Account__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetContactAccount.AccountId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ProductPopulated</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignIds</name>
        <label>Assign IDs</label>
        <locationX>380</locationX>
        <locationY>311</locationY>
        <assignmentItems>
            <assignToReference>$Record.TeacherNumber__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forTeacherNumber</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.ExtID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forExtId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forExtId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.FirstName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forFirstNameInitial</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.MiddleName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forMiddleNameInitial</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.LastName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forLastNameInitial</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Company__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forCompanyInitial</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.OrganizationCode__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forOrganizationCode</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetAccountByOrgCode</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignProductByEan</name>
        <label>Assign Product by EAN</label>
        <locationX>182</locationX>
        <locationY>2951</locationY>
        <assignmentItems>
            <assignToReference>$Record.Product__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetProductByEan.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Educational_Program_Method__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetProductByEan.Method__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>EanPopulated</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignProductByEanNumber</name>
        <label>Assign Product by EAN Number</label>
        <locationX>50</locationX>
        <locationY>3311</locationY>
        <assignmentItems>
            <assignToReference>$Record.Product__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetProductByEanNumber.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Educational_Program_Method__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetProductByEanNumber.Method__c</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>EanPopulated</name>
        <label>EAN populated?</label>
        <locationX>182</locationX>
        <locationY>3071</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>LookupProductByEanNumber</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Product__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.EAN__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetProductByEanNumber</targetReference>
            </connector>
            <label>Lookup Product by EAN Number</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsAccountFound</name>
        <label>Is Account not found?</label>
        <locationX>380</locationX>
        <locationY>551</locationY>
        <defaultConnector>
            <targetReference>AssignAccount</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>AccountIsNotFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetAccountByOrgCode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAccountByCustomerNumber</targetReference>
            </connector>
            <label>Account is not found</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsAccountStillNotFound</name>
        <label>Is Account still not found?</label>
        <locationX>226</locationX>
        <locationY>791</locationY>
        <defaultConnector>
            <targetReference>AssignAccount</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>AccountIsStillNotFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetAccountByCustomerNumber</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAccountByDeliveryCustomer</targetReference>
            </connector>
            <label>Account is still not found</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsContactNotFound</name>
        <label>Is contact not found?</label>
        <locationX>380</locationX>
        <locationY>1463</locationY>
        <defaultConnector>
            <targetReference>AssignContact</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ContactIsNotFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetContactByTeacherNumber</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetContactByCustomerNumber</targetReference>
            </connector>
            <label>Contact is not found</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsContactStillNotFound</name>
        <label>Is Contact still not found?</label>
        <locationX>226</locationX>
        <locationY>1703</locationY>
        <defaultConnector>
            <targetReference>AssignContact</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ContactIsStillNotFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetContactByCustomerNumber</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetContactByEmail</targetReference>
            </connector>
            <label>Contact is still not found</label>
        </rules>
    </decisions>
    <decisions>
        <name>LookupAccountViaContact</name>
        <label>Lookup Account via Contact?</label>
        <locationX>380</locationX>
        <locationY>2255</locationY>
        <defaultConnector>
            <targetReference>ProductPopulated</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ContactAccount</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Contact__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetContactAccount</targetReference>
            </connector>
            <label>Contact Account</label>
        </rules>
    </decisions>
    <decisions>
        <name>ProductPopulated</name>
        <label>Product populated?</label>
        <locationX>380</locationX>
        <locationY>2711</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>LookupProduct</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Product__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetProductByEan</targetReference>
            </connector>
            <label>Lookup Product</label>
        </rules>
    </decisions>
    <formulas>
        <name>CustomerNumber</name>
        <dataType>Number</dataType>
        <expression>VALUE({!$Record.PA_Customer_Number__c})</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forAccountId</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!GetAccountByOrgCode.Id})),{!GetAccountByOrgCode.Id},
IF(NOT(ISBLANK({!GetAccountByCustomerNumber.Id})),{!GetAccountByCustomerNumber.Id},{!GetAccountByDeliveryCustomer.Id}))</expression>
    </formulas>
    <formulas>
        <name>forCompany</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!$Record.Company__c})),{!$Record.Company__c},
IF(NOT(ISBLANK({!GetAccountByOrgCode.Name})),{!GetAccountByOrgCode.Name},
IF(NOT(ISBLANK({!GetAccountByCustomerNumber.Name})),{!GetAccountByCustomerNumber.Name},{!GetAccountByDeliveryCustomer.Name})))</expression>
    </formulas>
    <formulas>
        <name>forCompanyContact</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!$Record.Company__c})),{!$Record.Company__c},{!GetContactAccount.Account.Name})</expression>
    </formulas>
    <formulas>
        <name>forCompanyInitial</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!$Record.SchoolTeacher__c},&quot;School&quot;),{!$Record.OcnName__c},
IF(AND(ISPICKVAL({!$Record.SchoolTeacher__c},&quot;Other&quot;),ISBLANK({!$Record.OcnFirstName__c})),{!$Record.OcnName__c},&quot;&quot;))</expression>
    </formulas>
    <formulas>
        <name>forContactId</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!GetContactByTeacherNumber.Id})),{!GetContactByTeacherNumber.Id},
IF(NOT(ISBLANK({!GetContactByCustomerNumber.Id})),{!GetContactByCustomerNumber.Id},{!GetContactByEmail.Id}))</expression>
    </formulas>
    <formulas>
        <name>forExtId</name>
        <dataType>String</dataType>
        <expression>&quot;NU&quot;&amp;{!$Record.PositionId__c}</expression>
    </formulas>
    <formulas>
        <name>forFirstName</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!$Record.FirstName__c})),{!$Record.FirstName__c},
IF(NOT(ISBLANK({!GetContactByTeacherNumber.Id})),{!GetContactByTeacherNumber.FirstName},
IF(NOT(ISBLANK({!GetContactByCustomerNumber.Id})),{!GetContactByCustomerNumber.FirstName},{!GetContactByEmail.FirstName})))</expression>
    </formulas>
    <formulas>
        <name>forFirstNameInitial</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!$Record.SchoolTeacher__c},&quot;Teacher&quot;),{!$Record.OcnFirstName__c},
IF(NOT(ISBLANK({!$Record.DcnFirstName__c})),{!$Record.DcnFirstName__c},
{!$Record.DccnFirstName__c}))</expression>
    </formulas>
    <formulas>
        <name>forKlopotekNumber</name>
        <dataType>String</dataType>
        <expression>TEXT({!$Record.OrganizationCode__c})</expression>
    </formulas>
    <formulas>
        <name>forLastName</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!$Record.FirstName__c})),{!$Record.LastName__c},
IF(NOT(ISBLANK({!GetContactByTeacherNumber.Id})),{!GetContactByTeacherNumber.LastName},
IF(NOT(ISBLANK({!GetContactByCustomerNumber.Id})),{!GetContactByCustomerNumber.LastName},{!GetContactByEmail.LastName})))</expression>
    </formulas>
    <formulas>
        <name>forLastNameInitial</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!$Record.SchoolTeacher__c},&quot;Teacher&quot;),{!$Record.OcnName__c},
IF(NOT(ISBLANK({!$Record.DcnFirstName__c})),{!$Record.DcnName__c},
{!$Record.DccnName__c}))</expression>
    </formulas>
    <formulas>
        <name>forMiddleName</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!$Record.FirstName__c})),{!$Record.MiddleName__c},
IF(NOT(ISBLANK({!GetContactByTeacherNumber.Id})),{!GetContactByTeacherNumber.MiddleName},
IF(NOT(ISBLANK({!GetContactByCustomerNumber.Id})),{!GetContactByCustomerNumber.MiddleName},{!GetContactByEmail.MiddleName})))</expression>
    </formulas>
    <formulas>
        <name>forMiddleNameInitial</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!$Record.SchoolTeacher__c},&quot;Teacher&quot;),{!$Record.OcnPrefix__c},
IF(NOT(ISBLANK({!$Record.DcnFirstName__c})),{!$Record.DcnPrefix__c},
{!$Record.DccnPrefix__c}))</expression>
    </formulas>
    <formulas>
        <name>forOrganizationCode</name>
        <dataType>Number</dataType>
        <expression>IF(ISPICKVAL({!$Record.SchoolTeacher__c},&quot;School&quot;),VALUE({!$Record.PA_Customer_Number__c}),
IF(NOT(ISBLANK({!$Record.OrganizationCode__c})),{!$Record.OrganizationCode__c},
IF(ISBLANK({!$Record.DcnFirstName__c}),VALUE({!$Record.DeliveryCustomer__c}),NULL)))</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forTeacherNumber</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!$Record.SchoolTeacher__c},&quot;Teacher&quot;),{!$Record.PA_Customer_Number__c},
IF(NOT(ISBLANK({!$Record.TeacherNumber__c})),{!$Record.TeacherNumber__c},
IF(NOT(ISBLANK({!$Record.DcnFirstName__c})),{!$Record.DeliveryCustomer__c},&quot;&quot;)))</expression>
    </formulas>
    <interviewLabel>Before-Save Updates Pre Opportunity {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Before-Save Updates Pre Opportunity</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>GetAccountByCustomerNumber</name>
        <label>Get Account by Customer Number</label>
        <locationX>226</locationX>
        <locationY>671</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsAccountStillNotFound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>KlopotekNumber__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.PA_Customer_Number__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>KlopotekNumber__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>OperatingCompany__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Noordhoff</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetAccountByDeliveryCustomer</name>
        <label>Get Account by Delivery Customer</label>
        <locationX>94</locationX>
        <locationY>911</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignAccount</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>KlopotekNumber__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.DeliveryCustomer__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>KlopotekNumber__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>OperatingCompany__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Noordhoff</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetAccountByOrgCode</name>
        <label>Get Account by Organization Code</label>
        <locationX>380</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsAccountFound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>KlopotekNumber__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forKlopotekNumber</elementReference>
            </value>
        </filters>
        <filters>
            <field>KlopotekNumber__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>OperatingCompany__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Noordhoff</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetContactAccount</name>
        <label>Get Contact Account</label>
        <locationX>248</locationX>
        <locationY>2375</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignContactAccount</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Contact__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetContactByCustomerNumber</name>
        <label>Get Contact by Customer Number</label>
        <locationX>226</locationX>
        <locationY>1583</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsContactStillNotFound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>TeacherNumber__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.PA_Customer_Number__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>TeacherNumber__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>OperatingCompany__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Noordhoff</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetContactByEmail</name>
        <label>Get Contact</label>
        <locationX>94</locationX>
        <locationY>1823</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignContact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Email__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Email</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>OperatingCompany__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Noordhoff</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetContactByTeacherNumber</name>
        <label>Get Contact</label>
        <locationX>380</locationX>
        <locationY>1343</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsContactNotFound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>TeacherNumber__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.TeacherNumber__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>TeacherNumber__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>OperatingCompany__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Noordhoff</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetProductByEan</name>
        <label>Get Product by EAN</label>
        <locationX>182</locationX>
        <locationY>2831</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignProductByEan</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EAN__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.EAN__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>EAN__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetProductByEanNumber</name>
        <label>Get Product by EAN Number</label>
        <locationX>50</locationX>
        <locationY>3191</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignProductByEanNumber</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EANnumber__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.EAN__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>AssignIds</targetReference>
        </connector>
        <object>Pre_Opportunity__c</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>varAccountId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varAccountTeacher</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varContactId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varEducationalProgramMethodId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varOpportunityId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varProductId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
